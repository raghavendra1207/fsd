# -*- coding: utf-8 -*-
"""Copy of Copy of Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p42MCiwuDvIKvEnsOzN4mOGmnpW48YZk
"""

#example
class person:
  def __init__(self,name,age):
    self.a=name
    self.b=age
  def info(self,cla,sec):
    return "my name is"+str(self.a)+"my class is"+str(cla)+"my sec is"+str(sec)+"my age is"+str(self.b)
p=person(" rags "," 10")
print(p.info(" cse "," b "))

#instance method
class person:
  def __init__(self,name,age):
    self.a=name
    self.b=age
  def info(self):
    return "my name is"+str(self.a)+"my age is"+str(self.b)
p=person(" rags "," 10")
print(p.info())

#class method
class stud:
  name="student"
  def __init__(self,roll,name):
    self.a=roll
    self.b=name
  def info(self):
    return "name is"+self.b+"roll number is"+str(self.a)
  @classmethod
  def classnam(cls):
    return cls.name
p=stud("raghav","571")
print(p.info())
print(p.classnam())

#static method,class method,instance method
class stud:
  name="student"
  def __init__(self,roll,name):
    self.a=roll
    self.b=name
  def info(self):
    return "name is"+self.b+"roll number is"+str(self.a)
  @staticmethod
  def sum(a,b,c):
    return a+b+c
  @classmethod
  def classnam(cls):
    return cls.name
p=stud("raghav","571")
print(p.sum(10,20,30))
print(p.info())
print(p.classnam())

#protected modifiers
class stud:
  #protected members
  _name="none"
  _roll="none"
  _branch="none"
  def __init__(self,name,roll,branch):
    self._name=name
    self._roll=roll
    self._branch=branch
    #protected member function
  def _disrollandbranch(self):
    #accessing protected members
    print("roll: ",self._roll)
    print("branch: ",self._branch)
#derived class
class studinfo(stud):
  def __init__(self,name,roll,branch):
    stud.__init__(self,name,roll,branch)
  #public member function
  def display(self):
    print("name",self._name)
    #accessing protected data memebers of super class
    self._disrollandbranch()
obj=studinfo("rags",571,"cse")
obj.display()

#private modifiers
class stud:
  __name="none"
  __roll="none"
  __branch="none"
  def __init__(self,name,roll,branch):
    self.__name=name
    self.__roll=roll
    self.__branch=branch
  def dispaly(self):
    print("name",self.__name)
    print("roll",self.__roll)
    print("branch",self.__branch)
  def access(self):
    self.dispaly()
obj=stud("rags",571,"cse")
obj.access()

"""_nam"""